// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EnoFieldset assertAllTouched when the only existing entry is not touched throws an error 1`] = `
"An excess element named 'eno' was found, is it possibly a typo?

   Line | Content
      1 | 
      2 |         languages:
 >    3 |         eno = eno notation
      4 |       
"
`;

exports[`EnoFieldset assertAllTouched when the only existing entry is not touched with a custom message function throws an error generated by my custom message function 1`] = `
"my custom generated message for entry eno with value eno notation

   Line | Content
      1 | 
      2 |         languages:
 >    3 |         eno = eno notation
      4 |       
"
`;

exports[`EnoFieldset assertAllTouched when the only existing entry is not touched with a custom message string throws an error with my custom message 1`] = `
"my custom error

   Line | Content
      1 | 
      2 |         languages:
 >    3 |         eno = eno notation
      4 |       
"
`;

exports[`EnoSection assertAllTouched when the only existing element is not touched throws an error 1`] = `
"An excess element named 'language' was found, is it possibly a typo?

   Line | Content
 >    1 | language: eno
"
`;

exports[`EnoSection assertAllTouched when the only existing element is not touched with a custom message function throws an error generated by my custom message function 1`] = `
"my custom generated message for element language with value eno

   Line | Content
 >    1 | language: eno
"
`;

exports[`EnoSection assertAllTouched when the only existing element is not touched with a custom message string throws an error with my custom message 1`] = `
"my custom error

   Line | Content
 >    1 | language: eno
"
`;

exports[`Recursive assertAllTouched when the only existing fieldset is touched, but not its single entry throws an error 1`] = `
"An excess element named 'eno' was found, is it possibly a typo?

   Line | Content
      1 | 
      2 |       languages:
 >    3 |       eno = eno notation
      4 |     
"
`;

exports[`Recursive assertAllTouched when the only existing fieldset is touched, but not its single entry with a custom message function throws an error generated by my custom message function 1`] = `
"my custom generated message for element eno with value eno notation

   Line | Content
      1 | 
      2 |       languages:
 >    3 |       eno = eno notation
      4 |     
"
`;

exports[`Recursive assertAllTouched when the only existing fieldset is touched, but not its single entry with a custom message string throws an error with my custom message 1`] = `
"my custom error

   Line | Content
      1 | 
      2 |       languages:
 >    3 |       eno = eno notation
      4 |     
"
`;
